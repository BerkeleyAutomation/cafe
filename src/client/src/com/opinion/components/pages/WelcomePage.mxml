<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
		   layout="absolute" 
		   xmlns:core="com.opinion.components.core.*" 
		   xmlns:utils="com.opinion.utils.*" 
		   xmlns:pages="com.opinion.components.pages.*" 
		   creationComplete="init()" 
		   backgroundColor="#000000" 
		   resize="redrawPoints()">
	<mx:Script>
        <![CDATA[
        	import mx.controls.Image;
        	import mx.controls.Text;
			import mx.controls.Alert;
            import com.opinion.utils.HTTPUtils;
            import com.opinion.utils.DisplayUtils;
			import com.opinion.settings.Configuration;
			import mx.rpc.events.FaultEvent;
			import com.opinion.utils.Log;
			import com.adobe.serialization.json.JSON;
			import com.opinion.utils.MathUtils;
			import com.opinion.components.core.OpinionMap;
			import mx.controls.Alert;
			import com.opinion.utils.HiveDraw;
			
			import flare.animate.Easing;
			import flare.animate.Parallel;
			import flare.animate.Sequence;
			import flare.animate.TransitionEvent;
			import flare.animate.Transitioner;
			import flare.animate.Tween;
			
            
            private var eigenvectors:Array = [];
            private var axisMax:Array = [];
            private var axisMin:Array = [];
			private var _graphMin:Point;
            private var _graphMax:Point;
            private var xAxisMax:Number;
            private var yAxisMax:Number;
            private var originalCoor:Dictionary = new Dictionary();
            private var spriteNames:Array = new Array();
            private var spriteObjects:Dictionary = new Dictionary();
            
			private static const xLowerPadding:int = 10;
            private static const xUpperPadding:int = 10;
            private static const yLowerPadding:int = 0;
            private static const yUpperPadding:int = 0; 
			[Embed(source="/assets/images/berkeley-logo.png")] public static const LOGO:Class;
            
            private var alphaChoices:Array = [0.45, .66, .75, .9];
            private var largeUserPositions:Array = [];//[[.2,.4],[.4,.8],[.5,.2],[.75,.5],[.6,.7]];
            private var largePoints:Array = new Array();
            
            private var face1:Image = new Image();
            private var face2:Image = new Image();
            private var face3:Image = new Image();
            private var face4:Image = new Image();
            private var face5:Image = new Image();
           // [Embed(source="/assets/images/Mimi_OpinionSpace-HEDonly_trimmed.png")] public static const LOGO:Class;
            //[Embed(source="/assets/images/face1.png")] public static const FACE1:Class;
            //[Embed(source="/assets/images/face2.png")] public static const FACE2:Class;
            //[Embed(source="/assets/images/face3.png")] public static const FACE3:Class;
            //[Embed(source="/assets/images/face4.png")] public static const FACE4:Class;
            //[Embed(source="/assets/images/face5.png")] public static const FACE5:Class;
            private var imageArray:Array = [face1, face2, face3, face4, face5];
            private var spriteToImg:Dictionary = new Dictionary();
            private var imgToSprite:Dictionary = new Dictionary();
            
            private static const WELCOME_CONTENT_LOWER_PADDING:int = 20;
            
           // [Embed(source="/assets/img/speech_bubble.png")] public static const SPEECH_BUBBLE:Class;

			private function init():void{					
				// Add any add-ons
                if (Configuration.WELCOME_PAGE_ADD_ON) 
                {
					for (var i:int = 0; i < Configuration.WELCOME_PAGE_ADD_ONS.length; i++)
					{
						var parent:DisplayObjectContainer = welcomeCanvas;
						for (var n:int = 0; n < Configuration.WELCOME_PAGE_ADD_ONS[i]['parent'].length; n++)
						{
							parent = DisplayObjectContainer(parent.getChildByName(Configuration.WELCOME_PAGE_ADD_ONS[i]['parent'][n]));
						} 
						parent.addChild(Configuration.WELCOME_PAGE_ADD_ONS[i]['child']);
					}
                }
				
				// Check entry code
				if (Configuration.SOFT_ENTRY_CODES)
				{
					var parameters2:Object = new Object();
					parameters2['entrycode'] = this.parentApplication.ENTRY_CODE;
					sendFirstLogin.send(parameters2);
				}
				else{
					firstTimeButton.visible = Configuration.FIRST_TIME_TRIAL_AVAILABLE && Configuration.ALLOW_UNAUTH_EXPLORE;
					firstTimeButton.includeInLayout = Configuration.FIRST_TIME_TRIAL_AVAILABLE && Configuration.ALLOW_UNAUTH_EXPLORE;
				}
				
				// Draw default welcome points
				if (Configuration.USE_DEFAULT_WELCOME_PAGE_CONTENT)
				{
//					face1.source = FACE1;
	//				face2.source = FACE2;
		//			face3.source = FACE3;
			//		face4.source = FACE4;
				//	face5.source = FACE5;
					
					for (var j:int = 0; j < imageArray.length; j++)
					{
						imageArray[j].buttonMode = true;
						imageArray[j].useHandCursor = true;
						imageArray[j].addEventListener(MouseEvent.CLICK, handleImageClick);
					}
					
					// establish the bounds of the boxes
					if (this.parentApplication.numStatements == 2)
					{
						starCanvas.percentWidth = 75;
						starCanvas.percentHeight = 80;
					} else
					{
						starCanvas.percentWidth = 100;
						starCanvas.percentHeight = 100;
					}
					
					drawWelcomePoints();	
				}
				
				if (Configuration.AUTO_FADE_POINTS_TO_TEXT)
					setTimeout(function():void{if (starContent.visible && starContent.includeInLayout)
											{
												starContent.visible = false;
												starContent.includeInLayout = false;
												textContent.visible = true;
												textContent.includeInLayout = true;
											}}, Configuration.AUTO_FADE_DURATION);
				
				if(Configuration.SHOW_BOOKMARK)
				{
					bookmarkLink.visible = true;
					bookmarkLink.includeInLayout = true
					var userAgent:String = ExternalInterface.call( "function getAppName(){ return navigator.userAgent; }" ); 
					
					if(userAgent.toLowerCase().indexOf("chrome") >= 0 || userAgent.toLowerCase().indexOf("safari") >= 0 )
						bookmarkLink.label = Configuration.CREATE_BOOKMARK_LINK_ALT;
					
					//if(appName != "Netscape" || appName != "Microsoft Internet Explorer")
						

				}
				
				if (Configuration.USE_ENTRY_CODES && !Configuration.FIRST_TIME_TRIAL_AVAILABLE)
				{
					signInButton.styleName = "blueButtonLarge";
				}
				
				if (Configuration.WELCOME_PAGE_VID_URL != "")
				{
					//Security.allowDomain(Configuration.WELCOME_PAGE_VID_URL);
					//youtubevid.load(Configuration.WELCOME_PAGE_VID_URL);
				}
			}
			
			
            private function setup():void {
	            var anchorStyleSheet:StyleSheet = new StyleSheet();
	            anchorStyleSheet.parseCSS("a:hover { color: #88B514; font-weight: bold; } a { color: #57751E; font-weight: bold; }");
	            //ta.styleSheet = anchorStyleSheet
            }
            
            private function firstTime():void {
            	if (Configuration.SHOW_WALKTHROUGH)
            		this.parentApplication.opinionMap.mapOverlay.showWalkthrough();
				
				//if (this.parentApplication.opinionMap.comment_count < 2)
				//{
					//this.parentApplication.opinionMap.mapOverlay.showStatementsPage();
					//this.parentApplication.opinionMap.transitionDemoText(Configuration.INSTRUCTIONS_4alt,false);
				//}
				//else
				//{
					this.parentApplication.opinionMap.transitionDemoText(Configuration.INSTRUCTIONS_1,false,0,true,true,"More about the Map",18);
			//	}
				
				this.parentApplication.opinionMap.currentTopicBox.visible = true;
				this.parentApplication.opinionMap.currentTopicBox.includeInLayout = true;
				this.parentApplication.opinionMap.currentTopicContent.visible = true;
				this.parentApplication.opinionMap.currentTopicContent.includeInLayout = true;
				this.parentApplication.opinionMap.currentTopicHeader.visible = true;
				this.parentApplication.opinionMap.currentTopicHeader.includeInLayout = true;
				
            	this.parentApplication.displayOpinionMap();
            	this.parentApplication.currentState = 'home';
            }
			
			private function signIn():void{
				DisplayUtils.displayPopup(this.parentApplication, 'loginForm');
			}
			
			private function handleFirstLogin():void{
				var decodedResult:Object = JSON.decode(sendFirstLogin.lastResult.toString());
				if (decodedResult['first_time'])
					{
						firstTimeButton.visible = Configuration.FIRST_TIME_TRIAL_AVAILABLE;
						firstTimeButton.includeInLayout = Configuration.FIRST_TIME_TRIAL_AVAILABLE;
					}
			}
			
			private function handleFaultOrTimeout(event:FaultEvent):void{
				//this.parentApplication.log.log(Log.ERROR, this.parentApplication.opinionSpaceId, "HTTPServiceError: " + event.target.method.toString()+" "+ event.target.url.toString() + ":" + event.fault.faultString);
				Alert.show(Configuration.HTTP_ERROR_USER_STRING);
			}
			
			private function togglePointsAndText():void
			{
				if (!Configuration.WELCOME_PAGE_TOGGLE_TEXT)
					return;
				
				if (starContent.visible && starContent.includeInLayout)
				{
					starContent.visible = false;
					starContent.includeInLayout = false;
					textContent.visible = true;
					textContent.includeInLayout = true;
					return;
				}
				
				if (textContent.visible && textContent.includeInLayout)
				{
					starContent.visible = true;
					starContent.includeInLayout = true;
					textContent.visible = false;
					textContent.includeInLayout = false;
				}
			}
			
			/* Drawing functions - based on those in OpinionMap.mxml */
			
			private function drawWelcomePoints():void
			{
				
				if (this.parentApplication.eigenvectorsDecoded == null)
				{
					setTimeout(drawWelcomePoints, 500);
					return;
				}
				
				eigenvectors =  MathUtils.compressEigenvectorsDecoded(this.parentApplication.eigenvectorsDecoded);
				
				axisMax = MathUtils.getAxisMax(eigenvectors);
                axisMin = MathUtils.getAxisMin(eigenvectors);              
                
                _graphMin = new Point(axisMin[0], axisMin[1]);
                _graphMax = new Point(axisMax[0], axisMax[1]);
                
                // Max lengths of the axes
                xAxisMax = Math.abs(_graphMax.x - _graphMin.x);
                yAxisMax = Math.abs(_graphMax.y - _graphMin.y);
				
				// Draw the background points
				for (var i:int = 0; i<Configuration.NUM_WELCOME_POINTS; i++)
				{
					
					//var userRatings:Array = [Math.random(), Math.random(), Math.random(), Math.random(), Math.random()];
					var userRatings:Array = new Array();
					for(var k:int = 0; k<this.parentApplication.numStatements; k++)
					{
						//if (Math.random()>.5)
							userRatings.push(Math.random());
						//else if (Math.random()<.25)
							//userRatings.push(1);
						//else
							//userRatings.push(.1);
					}
					
					var xVal:Number = MathUtils.dotProduct(userRatings, eigenvectors[0]);
                	var yVal:Number = MathUtils.dotProduct(userRatings, eigenvectors[1]);
                
        	        // These are the coordinates assuming no zoom and a centered graph
	                var rawX:Number = transformXCoorToPixels(xVal);
    	            var rawY:Number = transformYCoorToPixels(yVal);
					
					/*
					var dotColor:Number = 0xffffff;
					var dotAlpha:Number = alphaChoices[Math.round(Math.random() * alphaChoices.length)];
					
					var spr:Sprite = createCircle(rawX,
				                                  rawY,
				                                  i.toString(),
				                                   10 * Math.random(),
				                                   dotAlpha,
				                                   dotColor,
				                                   true);
				                                   
				    */
				                                   
					// choose random color palette
	              /* var colorPalette:Array = [[[0x6a8c1e], [0x964099], [0xf8e8f3]], [[0x6a8c1e], [0xdcdddf], [0x9f6a00]], [[0x6a8c1e], [0xe00800], [0xe9f608]]];   
	                var cindx:int = Math.random() * colorPalette.length;
	                
	                // shuffle colors
	                var col:Array = colorPalette[cindx];
	                var colors:Array = [];
	                colors = col;
	                
					while (col.length > 0) {
					    colors.push(col.splice(Math.round(Math.random() * (col.length - 1)), 1)[0]);
					}
					
					var alphas:Array = new Array();
					var ratios:Array = new Array();
					
					for (var k:int=0; k < colors.length; k++)
					{
						var tmpA:Array = new Array();
						var tmpR:Array = new Array();
						for (var j:int= 0; j < colors[0].length; j++)
						{
							tmpA.push(0.7);
							tmpR.push(j*255/colors[0].length);
						}	
						alphas.push(tmpA);
						ratios.push(tmpR);
					}
	                
	                var spr:Sprite = this.parentApplication.PointDrawer.drawFlower(10 + Math.random()*20, // outer radius
	                															  .75, // decay
	                															  alphas, // alpha 
	                															  [5 + Math.random() * 15, 5 + Math.random() * 15, 5 + Math.random() * 15], // num petals
	                															  colors, // colors
	                															  ratios, 
	                															  [Math.PI * Math.random(), Math.PI * Math.random(), Math.PI * Math.random()]);*/
					
					/*
					var colorPalette:Array = [[0xFAB41E , 0x732D44],[0xFFFFFF , 0xCCCC33],[0x42289F , 0x20043D],[0x8A5858 , 0x440000],[0xBDDBF0 , 0xE01B4C]];
					var colors:Array = [];
					while (colorPalette.length > 0) {
						colors.push(colorPalette.splice(Math.round(Math.random() * (colorPalette.length - 1)), 1)[0]);
					}*/
					
					var arr:Array = this.parentApplication.PointDrawer.ideaProgression();
					
					var sizes:Array = [14, 22.5, 30, 37.5, 55];
					var colors:Array = this.parentApplication.opinionMap.POINT_COLORS;//[0xcccccc, 0xff3499, 0xffda10, 0xffaa10, 0xff5b11, 0xef3a47, 0xc22f3a, 0xc22faf, 0x9e2fc2];
						                
					var cindx:int = Math.random() * colors.length;
					var sindx:int = Math.random() * sizes.length;
					if (cindx == 0)
						var spr:Sprite = this.parentApplication.PointDrawer.drawDisc(colors[0],0,0,2,sizes[0]);
					else
						var spr:Sprite = this.parentApplication.PointDrawer.drawDisc(colors[cindx],0,0,sizes[sindx]/7,sizes[sindx]);
	
	                // shuffle colors
	                //var col:Array = colorPalette[cindx];
	                //var colors:Array = col;
					//var spr:Sprite = this.parentApplication.PointDrawer.drawDaisy(15 + Math.random()*10, [.8,.8], 7 + Math.random() * 5, colors[0], [0,20 +  50*Math.random()]);
					//this.parentApplication.PointDrawer.drawDaisy(15 + Math.random()*10, [1,1,1], 10 + Math.random() * 3, colors, [0,40, 120]);
					
					spr.x = rawX;
					spr.y = rawY;				                                   
				                                   
					spriteNames.push(spr.name);
					originalCoor[spr.name] = new Point(xVal, yVal);
					spriteObjects[spr.name] = spr;
					
					/*
					var gradientGlow:GradientGlowFilter = new GradientGlowFilter();
	                gradientGlow.distance = 0;
	                gradientGlow.angle = 0;
	                gradientGlow.colors = [0x000000, dotColor, dotColor, dotColor];
	                gradientGlow.alphas = OpinionMap.GRADIENT_GLOW_ALPHA;
	                gradientGlow.ratios = OpinionMap.GRADIENT_GLOW_RATIO;
	                gradientGlow.blurX = 20;
	                gradientGlow.blurY = 20;
	                gradientGlow.strength = 4;
	                gradientGlow.quality = BitmapFilterQuality.MEDIUM;
	                gradientGlow.type = BitmapFilterType.OUTER;
	                spr.filters = [gradientGlow];
	                */
					starBox.rawChildren.addChild(spr);
				}
				
				for (var j:int = 0; j < largeUserPositions.length; j++)
				{
					var x:Number = starBox.width * largeUserPositions[j][0];
    	            var y:Number = starBox.height * largeUserPositions[j][1];
					var colorPalette:Array = [[0xFAB41E , 0x732D44],[0xFFFFFF , 0xCCCC33],[0x42289F , 0x20043D],[0x8A5858 , 0x440000],[0xBDDBF0 , 0xE01B4C]];
					var cindx:int = Math.random() * colorPalette.length;
	
	                // shuffle colors
	                var colors:Array = colorPalette[cindx];
					/*
					var color:Number = 0xffffff;
					var alpha:Number = 1;
					
					var sprite:Sprite = createCircle(x,
				                                  y,
				                                  j.toString()+'primary',
				                                   10,
				                                   alpha,
				                                   color);
					*/
					var sprite:Sprite = this.parentApplication.PointDrawer.drawDaisy(42, [1,1,1], 10 + Math.random() * 3, colors, [0,40, 120]);
					/*
					if (j % 2 == 0)
					{
						colors = [];
						while (colorPalette.length > 0) {
							colors.push(colorPalette.splice(Math.round(Math.random() * (colorPalette.length - 1)), 1)[0]);
						}
						
						
						sprite = this.parentApplication.PointDrawer.drawDaisy(42, [1,1], 15, colors[0], [0,50]);
							this.parentApplication.PointDrawer.drawFlower(42, 
																			  0.7, 
																			  [[1,1], [1,1], [1,1]], 
																			  [15, 18, 15], 
																			  [[0xfc8ccd, 0x980f30],[0x9155c7, 0x980f30], [0x980f30, 0xf9df07]], 
																			  [[0, 127],[0, 90],[0, 60]], 
																			  [0, Math.PI/4, Math.PI/8]);
					} else
					{
						
						colors = [];
						while (colorPalette.length > 0) {
							colors.push(colorPalette.splice(Math.round(Math.random() * (colorPalette.length - 1)), 1)[0]);
						}
						
						
						sprite = this.parentApplication.PointDrawer.drawDaisy(42, [1,1], 15, colors[0], [0,50]);
						/*sprite = this.parentApplication.PointDrawer.drawFlower(42, 
																			   0.7, 
																			   [[1,1], [1,1], [1,1]], 
																			   [15, 18, 15], 
																			   [[0x6a8c1e, 0x6a8c1e], [0x980f30, 0x9155c7], [0xf9df07, 0xfc8ccd]], 
																			   [[0, 127],[0, 90],[0, 60]], 
																			   [0, Math.PI/4, Math.PI/8]);
					}*/
					sprite.x = x;
					sprite.y = y;
					sprite.name = j.toString()+'primary';
					sprite.addEventListener(MouseEvent.MOUSE_OVER, dotOver);	
					
					largePoints.push(sprite);
					
					// Not the most elegant solution, but a fix for now
					setTimeout(flowerBounce,5000 + Math.random()*5000,sprite);
					
					/*
					var gg:GradientGlowFilter = new GradientGlowFilter();
	                gg.distance = 0;
	                gg.angle = 0;
	                gg.colors = [0x000000, dotColor, dotColor, dotColor];
	                gg.alphas = OpinionMap.GRADIENT_GLOW_ALPHA;
	                gg.ratios = OpinionMap.GRADIENT_GLOW_RATIO;
	                gg.blurX = 20;
	                gg.blurY = 20;
	                gg.strength = 4;
	                gg.quality = BitmapFilterQuality.MEDIUM;
	                gg.type = BitmapFilterType.OUTER;
	                sprite.filters = [gg];
	                
	                var halo:Sprite = createHalo(0, 0, j.toString()+'halo', OpinionMap.HALO_THICKNESS, 1, 30, dotColor);
	                sprite.addChild(halo);

	                setTimeout(this.parentApplication.opinionMap.haloRadiation, 5000+Math.random() * 8000, halo);
	                */
	                	                
					starBox.rawChildren.addChild(sprite);
					
					spriteToImg[sprite] = imageArray[j];
					imgToSprite[imageArray[j]] = sprite;
				}
			}
			
			/**
            * Draws a basic circle sprite 
            */
            private function createCircle(x:Number, y:Number, id:String, radius:int, alpha:Number, color:Number, background:Boolean = false):Sprite {
                var sprite:Sprite = new Sprite();
                
                sprite.graphics.beginFill(color, alpha);
                sprite.graphics.drawCircle(0, 0, radius);
                
                sprite.x = x;
                sprite.y = y;
                sprite.name = id;
				
				if (!background && Configuration.WELCOME_PAGE_FACES_ENABLED)
				{
					sprite.buttonMode = true;
					sprite.addEventListener(MouseEvent.CLICK, handleDotClick);  
					sprite.addEventListener(MouseEvent.MOUSE_OVER, dotOver);	
				}
				
                return sprite;
            }
            
            /**
            * Draws a user halo
            */ 
            private function createHalo(x:Number, y:Number, id:String, lineThickness:Number, alpha:Number, radius:int, color:Number):Sprite {            
            	var sprite:Sprite = new Sprite();
            	
            	sprite.graphics.lineStyle(lineThickness, color, alpha);            	
            	sprite.graphics.drawCircle(0, 0, radius);
            	sprite.x = x;
            	sprite.y = y;
            	sprite.name = id;
            	return sprite;
            }
            
            private function handleDotClick(e:MouseEvent):void
            {
            	// Unused for now points are covered by the images	
            }
            
            private function handleImageClick(e:MouseEvent):void
            {
            	// Add any additional functionality specific to the image here
            	
            	togglePointsAndText();
            }
            
            private function dotOver(e:MouseEvent):void
            {
				var spr:Sprite = Sprite(e.currentTarget);
				if (spr.name.indexOf("halo") != -1) return;
				
				spr.removeEventListener(MouseEvent.MOUSE_OVER, dotOver);
				spr.scaleX = 1;
				spr.scaleY = 1;
				
				var img:Image = spriteToImg[spr];
				img.x = spr.x - 45;
				img.y = spr.y - 45;
				img.addEventListener(MouseEvent.MOUSE_OUT, dotOut);
				
				pictureBox.addChild(img);
				
            }
            
            private function dotOut(e:MouseEvent):void
            {
            	var img:Image = Image(e.target);
            	img.removeEventListener(MouseEvent.MOUSE_OUT, dotOut);
            	var spr:Sprite = imgToSprite[img];
            	spr.scaleX = 1;
            	spr.scaleY = 1;
            	pictureBox.removeChild(Image(e.target));
            	spr.addEventListener(MouseEvent.MOUSE_OVER, dotOver);
            }
            
            /**
            * Transforms x cartesian coordinate to pixel value
            */ 
            private function transformXCoorToPixels(x:Number):Number {
                var delta:Number = Math.abs(x - _graphMin.x);
                var ratio:Number = delta / xAxisMax;
                
                return ratio * (starBox.width - xUpperPadding  - xLowerPadding) + xLowerPadding;
            }
            
            /**
            * Transforms y cartesian coordinate to pixel value
            */ 
            private function transformYCoorToPixels(y:Number):Number {
                var delta:Number = Math.abs(y - _graphMin.y);
                var ratio:Number = delta / yAxisMax;
                
                return (starBox.height - yUpperPadding) - ratio * (starBox.height - yUpperPadding  - yLowerPadding);
            }
			
			/**
			 * If screen resized, adjust the point locations
			 */ 
			public function redrawPoints():void
			{
				// redraw non primary users
				for (var m:int = 0; m<spriteNames.length; m++) {
					var spr:Sprite = spriteObjects[spriteNames[m]];
					
					var rawX:Number = transformXCoorToPixels(originalCoor[spr.name].x);
					var rawY:Number = transformYCoorToPixels(originalCoor[spr.name].y);
					
					spr.x = rawX;
					spr.y = rawY;
				}
				
				// redraw the primary users
				for (var j:int = 0; j < largePoints.length; j++)
				{
					var x:Number = starBox.width * largeUserPositions[j][0];
    	            var y:Number = starBox.height * largeUserPositions[j][1];
					
					largePoints[j].x = x;
					largePoints[j].y = y;
				}
			}
			
			public function AddBookmark():void
			{
				var urlString:String = ExternalInterface.call("window.location.href.toString");
				ExternalInterface.call("CreateBookmarkLink", "OpinionSpace",urlString);
			}
			
			public function flowerBounce(sprite:Sprite):void {
				if (starContent.visible && starContent.includeInLayout)
				{	
					/*
					var twn:Tween = new Tween(sprite, .75,{y: sprite.y - 4});
					var twn1:Tween = new Tween(sprite, .75,{y: sprite.y + 4});
					var twn2:Tween = new Tween(sprite, .75,{y: sprite.y});
					var seq:Sequence = new Sequence(twn, twn1, twn2);
					seq.addEventListener(TransitionEvent.END, function():void{restartFlowerBounce(sprite);});
					seq.addEventListener(TransitionEvent.STEP, function():void{spriteToImg[sprite].x = sprite.x-45; spriteToImg[sprite].y = sprite.y-45;});
					seq.play();
					*/
						
					var t1:Tween = new Tween(sprite, 1, {scaleX:1.25, scaleY:1.25});
					var t2:Tween = new Tween(sprite, 1, {scaleX:1, scaleY:1});
					var seq:Sequence = new Sequence(t1,t2);
					seq.addEventListener(TransitionEvent.END, function():void{restartFlowerBounce(sprite);});
					seq.play();
				}
			}
			
			public function restartFlowerBounce(sprite:Sprite):void {
				setTimeout(flowerBounce, 3000+Math.random()*8000, sprite);
			}
			
			public function continueIntoSpace():void
			{
//				unileverWelcomePage.continueIntoSpace();
			}
			
        ]]>
	</mx:Script>
<!--	<mx:NumberFormatter id="collectedFormatter" useThousandsSeparator="true" /> -->
	
	<mx:Glow id="glowPanel" duration="0" alphaFrom="0" alphaTo=".17" blurXFrom="0.0" blurXTo="12.0" blurYFrom="0.0" blurYTo="12.0"  strength="3" color="0x000000" target="{splashTop}"/>
	<mx:Glow id="glowPanel1" duration="0" alphaFrom="0" alphaTo=".17" blurXFrom="0.0" blurXTo="12.0" blurYFrom="0.0" blurYTo="12.0"  strength="3" color="0x000000" target="{splashBack}"/>
	<mx:Fade id="fade" duration="300"/>
	<mx:Fade id="fadeIn" duration="2000" alphaFrom="0.0" alphaTo="1.0"/>
	<mx:Fade id="toggleFade" duration="750"/>
	<mx:HTTPService id="sendFirstLogin" url="{this.parentApplication.httpUtils.getServiceUrl('accountsjson/entrycode/firstlogin/')}" useProxy="false" method="GET" resultFormat="text" result="handleFirstLogin()" requestTimeout="{Configuration.HTTP_REQUEST_TIMEOUT}" fault="handleFaultOrTimeout(event)"/>
	
<!--	<pages:UnileverWelcomePage id="unileverWelcomePage" width="100%" height="100%" visible="{Configuration.UNILEVER_WELCOME_PAGE}" includeInLayout="{Configuration.UNILEVER_WELCOME_PAGE}"/>-->
	<!-- main page layout is canvas to easily support placement of add-ons -->
	<mx:Canvas id="welcomeCanvas" width="100%" height="100%" horizontalScrollPolicy="off" verticalScrollPolicy="off" visible="{!Configuration.UNILEVER_WELCOME_PAGE}" includeInLayout="{!Configuration.UNILEVER_WELCOME_PAGE}">
		
		<!-- Background, stretch to fit -->
		<mx:HBox height="100%" width="100%" horizontalAlign="center">
			<mx:Image width="100%" height="100%" visible="true" source="{Configuration.MAP_BACKGROUND}" scaleContent="true" maintainAspectRatio="false"/>	
		</mx:HBox>
		
		<!-- default welcome page content -->
		<mx:Canvas id="defaultWelcomeBox" top="40" left="0" height="100%" width="100%" showEffect="{fadeIn}" visible="{Configuration.USE_DEFAULT_WELCOME_PAGE_CONTENT}" includeInLayout="{Configuration.USE_DEFAULT_WELCOME_PAGE_CONTENT}">
			
			<mx:VBox id="welcomeContent" width="100%" height="100%" paddingTop="300" paddingBottom="{WELCOME_CONTENT_LOWER_PADDING}" >
				
				<!-- Points box (hbox needed as the starContent canvas can have a percentageWidth < 100 -->
				<mx:HBox id="starContent" width="100%" height="100%" horizontalAlign="center" verticalAlign="middle" showEffect="{toggleFade}">
					<mx:Canvas id="starCanvas" >
						<mx:Canvas id="starBox" width="100%" height="100%" top="0" left="0" resize="redrawPoints()"/>
						<mx:Canvas id="pictureBox" width="100%" height="100%" top="0" left="0"/>
					</mx:Canvas>	
				</mx:HBox>
				
				<!-- Info text -->
				<mx:Canvas id="textContent" width="100%" maxHeight="{welcomeContent.height - WELCOME_CONTENT_LOWER_PADDING}" horizontalScrollPolicy="off" visible="false" includeInLayout="false" showEffect="{toggleFade}">
					<mx:VBox width="100%" height="100%" textAlign="center" horizontalAlign="center">
						<mx:Text width="820" fontSize="15" htmlText="{Configuration.WELCOME_PAGE_DEFAULT_TEXT}" paddingTop="10" buttonMode="true" useHandCursor="true" mouseChildren="false" click="togglePointsAndText();"/>
						<mx:LinkButton id="bookmarkLink" styleName="linkAbout" label="{Configuration.CREATE_BOOKMARK_LINK}" click="AddBookmark()" visible="false" includeInLayout="false"/>
					</mx:VBox>	
				</mx:Canvas>
			</mx:VBox>		
			
			<mx:VBox top="0" left="0" width="100%" horizontalAlign="center">
				<mx:VBox id="splashBack" styleName="splashBack" verticalGap="10" textAlign="center" horizontalAlign="center" creationCompleteEffect="{glowPanel1}" paddingTop="{Configuration.ANNOUNCEMENT_BOX_TOP_PADDING}">
					<mx:Text width="100%" fontSize="15" fontWeight="bold" color="#250517" text="{Configuration.ANNOUNCEMENT_TEXT}" visible="{Configuration.ANNOUNCEMENT}" includeInLayout="{Configuration.ANNOUNCEMENT}"/>		
					<!--<mx:Text fontSize="19" fontWeight="bold" color="0x646462" visible="{Configuration.OPINIONS_EXPRESSED_NUM_USERS}" includeInLayout="{Configuration.OPINIONS_EXPRESSED_NUM_USERS}" text="{this.parentApplication.opinionMap.welcomeFormatter.format(Configuration.opinionsExpressedCalculation(this.parentApplication.numUsersTotal)) + ' ' + Configuration.USER_POST_TEXT}"/>-->
					<mx:VBox width="100%" horizontalAlign="center" paddingTop="10" paddingBottom="15">
						<mx:VBox styleName="mapLeftPanelHorizontalBoxLine" width="97%" height="1"/>	
					</mx:VBox>
					
					<mx:VBox height="80"></mx:VBox>					
					<mx:HBox horizontalGap="15">
						<utils:LoggedButton name="welcome_first-time" id="firstTimeButton" label="First Time" styleName="blueButtonLarge" click="firstTime()" visible="false" includeInLayout="false"/>
						<utils:LoggedButton id="signInButton" name="welcome_sign-in" label="Returning" styleName="grayButtonLarge" click="signIn()"/>	
					</mx:HBox>
					<mx:Text color="0x444444" fontSize="22" fontWeight="bold" width="100%" visible="{Configuration.OPINIONS_EXPRESSED_NUM_USERS}" includeInLayout="{Configuration.OPINIONS_EXPRESSED_NUM_USERS}" text="{this.parentApplication.opinionMap.welcomeFormatter.format(Configuration.opinionsExpressedCalculation(this.parentApplication.ideasTotal)) + ' ' + Configuration.USER_POST_TEXT}" />
				</mx:VBox>				
			</mx:VBox>
			
			<mx:VBox top="20" left="0" width="100%" horizontalAlign="center" verticalGap="20">
				<mx:VBox id="splashTop" verticalGap="0" width="{Configuration.WELCOME_PAGE_TITLE_BOX_WIDTH}" styleName="splashTop" textAlign="center" horizontalAlign="center" verticalAlign="middle" creationCompleteEffect="{glowPanel}" paddingTop="10" paddingBottom="10">
					<mx:Text id="titleText" width="100%" text="{Configuration.WELCOME_PAGE_TITLE}" color="0x999898" fontSize="{Configuration.WELCOME_PAGE_TITLE_FONT_SIZE}" fontWeight="bold" buttonMode="{Configuration.WELCOME_PAGE_TOGGLE_TEXT}" useHandCursor="{Configuration.WELCOME_PAGE_TOGGLE_TEXT}" mouseChildren="{Configuration.WELCOME_PAGE_TOGGLE_TEXT}" click="togglePointsAndText();"/>
					<mx:VBox width="100%" horizontalGap="0" horizontalAlign="center">
						<mx:Text text="The Opinion Space Research Project" color="0x999898" fontSize="16" fontWeight="bold"/>
						<mx:LinkButton styleName="explink" label="http://opinion.berkeley.edu" fontSize="13" click="{this.parentApplication.httpUtils.openLinkNewWindow('http://opinion.berkeley.edu/')}"/>
					</mx:VBox>
				</mx:VBox>
				
				<mx:VBox id="splashTop2" verticalGap="0" width="{Configuration.WELCOME_PAGE_TITLE_BOX_WIDTH-180}" styleName="splashTop" textAlign="center" horizontalAlign="center" verticalAlign="middle" creationCompleteEffect="{glowPanel}">
					<!--<mx:Text id="titleText" width="100%" text="{Configuration.WELCOME_PAGE_TITLE}" color="0x646462" fontSize="{Configuration.WELCOME_PAGE_TITLE_FONT_SIZE}" fontWeight="bold" buttonMode="{Configuration.WELCOME_PAGE_TOGGLE_TEXT}" useHandCursor="{Configuration.WELCOME_PAGE_TOGGLE_TEXT}" mouseChildren="{Configuration.WELCOME_PAGE_TOGGLE_TEXT}" click="togglePointsAndText();"/>-->
					<mx:Text text="{Configuration.WELCOME_PAGE_SUBLOGO_TEXT}" color="0x444444" fontSize="22" fontWeight="bold" width="100%" paddingBottom="10"/>		
				</mx:VBox>
			</mx:VBox>						
			
			<mx:VBox bottom="100" left="0" width="100%" horizontalAlign="center" visible="false" includeInLayout="false">
				<mx:VBox verticalGap="0" width="{Configuration.WELCOME_PAGE_TITLE_BOX_WIDTH}" styleName="splashTop" textAlign="center" horizontalAlign="center" creationCompleteEffect="{glowPanel}">
					<mx:Text width="90%" text="We are collecting ideas on the use of Social Media in Education. The best ideas have a chance to win 3 Nexus 7 prizes. It takes only a few minutes to join and with 4 easy steps you can enter our system. Click first time to beign." fontSize="17" color="0x999898"/>
				</mx:VBox>
			</mx:VBox>	
			
		</mx:Canvas> 
				
		<!--<mx:VBox id="site_panel" x="{this.width/2 - 275}" y="25" width="550" height="85%" borderThickness="5" borderStyle="solid" borderColor="0xFFFFFF" backgroundColor="#f1eee9" backgroundAlpha="1" includeInLayout="false" visible="false" showEffect="{fade}">
			<mx:HBox width="100%" horizontalAlign="right">
				<mx:Image id="closeButtonIcon" source="{Configuration.CLOSE_BUTTON}" mouseOver="{closeButtonIcon.source = Configuration.CLOSE_BUTTON_DOWN}" mouseOut="{closeButtonIcon.source = Configuration.CLOSE_BUTTON}" buttonMode="true" click="{iFrame.visible=false;site_panel.visible=false;}"/>
			</mx:HBox>
			<core:IFrame id="iFrame" source="" width="100%" height="100%" />
		</mx:VBox >-->		
	</mx:Canvas>
	<mx:VBox left="10" bottom="10">
		<!--<mx:Image left="10" bottom="10" source="{LOGO}" width="100"/>-->	
		<mx:Text text="A Project of the University of California at Berkeley" textAlign="center" width="100%"/>
	</mx:VBox>
</mx:Module>

<?xml version="1.0" encoding="utf-8"?>
<mx:Module xmlns:mx="http://www.adobe.com/2006/mxml" 
		   xmlns:utils="com.opinion.utils.*" 
		   initialize="init()">
	<mx:Script> 
		<![CDATA[
			import mx.controls.Alert;
			import mx.core.IFlexDisplayObject;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.controls.TextInput;
			import com.opinion.utils.Log;
			import com.opinion.settings.Configuration;
			
			public var username_input:TextInput;
			
			private function init():void{
				check.source = Configuration.CHECK;
				cross.source = Configuration.CROSS;
			}
			
			private function handleSendUsernameSuggest():void {
				var suggest:String = sendUsernameSuggest.lastResult.toString();
				sendUsernameSuggest.disconnect();
				check_availability.enabled = true;
				
				checking.visible = false;
				checking.includeInLayout = false;
				
				if (suggest.indexOf("Invalid username") != -1)
				{
					invalid.visible = true;
					invalid.includeInLayout = true;
					return;
				}
				
				suggest = suggest.substring(6, suggest.length -1);
				suggest = suggest.replace(" ", "");
				
				if(suggest.toLowerCase() == username_input.text.toLowerCase())
				{
					check.visible = true;
					check.includeInLayout = true;
					cross.visible = false;
					cross.includeInLayout = false;
					correct.visible = true;
					correct.includeInLayout = true;
					incorrect.visible = false;
					incorrect.includeInLayout = false;
				}
				else
				{
					check.visible = false;
					check.includeInLayout = false;
					cross.visible = true;
					cross.includeInLayout = true;
					correct.visible = false;
					correct.includeInLayout = false;
					if(username_input.text.length > 0){
						incorrect.visible = true;
						incorrect.includeInLayout = true;
					}
					else
					{
						incorrect.visible = false;
						incorrect.includeInLayout = false;
					}
				}
				
			}
			
			private function onUsernameCheck():void{		
								
				if(username_input == null)
					return;
				
				if(username_input.text == this.parentApplication.registeredUsername)
				{
					own_name.visible = true;
					own_name.includeInLayout = true;
					return;
				}
				
				checking.visible = true;
				checking.includeInLayout = true;
				//usernameSuggestion.visible = true;
				//usernameSuggestion.includeInLayout = true;
				check_availability.enabled = false;
				hideAllSuggestionFields();
				
				if(usernameValid())
				{
					var parameters:Object = new Object();
					parameters['name'] = username_input.text.toLowerCase();
					sendUsernameSuggest.send(parameters);
				}
				else
				{							
					check.visible = false;
					check.includeInLayout = false;
					cross.visible = true;
					cross.includeInLayout = true;
					incorrect.visible = true;
					incorrect.includeInLayout = true;					
					correct.visible = false;
					correct.includeInLayout = false;
					
					if(username_input.text.length == 0)
						hideAllSuggestionFields();
					
					checking.visible = false;
					checking.includeInLayout = false;
					check_availability.enabled = true;
				}
			}
			
			public function onUsernameChange():void{
				hideAllSuggestionFields()
			}
			
			private function usernameValid():Boolean{
				if(username_input.text.length < 3)
					return false;
				
				/*	var i:int = 0;
				for(i = 0; i< _username.text.length; i++)
				{
				var code:Number = _username.text.charCodeAt(i);
				if(code < 48)
				return false;
				if(code > 122)
				return false;
				if(code > 57 && code < 65)
				return false;
				if(code!=95 && code >90 && code < 97)
				return false;
				}*/
				
				return true;
			}
			
			public function hideAllSuggestionFields():void{
				check.visible = false;
				check.includeInLayout = false;
				cross.visible = false;
				cross.includeInLayout = false;
				correct.visible = false;
				correct.includeInLayout = false;
				incorrect.visible = false;
				incorrect.includeInLayout = false;
				own_name.visible = false;
				own_name.includeInLayout = false;
				invalid.includeInLayout = false;
				invalid.visible = false;
			}
			
			private function handleFaultOrTimeout(event:FaultEvent):void{
				//this.parentApplication.log.log(Log.ERROR, this.parentApplication.opinionSpaceId, "HTTPServiceError: " + event.target.method.toString()+" "+ event.target.url.toString() + ":" + event.fault.faultString);
				Alert.show(Configuration.HTTP_ERROR_USER_STRING);
				//if(fbLoading != null)
					//PopUpManager.removePopUp(fbLoading);
			}
		]]>
	</mx:Script>
	<utils:ExtendedHTTPService id="sendUsernameSuggest" url="{this.parentApplication.httpUtils.getServiceUrl('accountsjson/suggest/')}" useProxy="false" method="GET" resultFormat="text" result="handleSendUsernameSuggest()" requestTimeout="{Configuration.HTTP_REQUEST_TIMEOUT}" fault="handleFaultOrTimeout(event)"/>
	<mx:HBox width="100%">
		<utils:LoggedButton name="first-time_save-score_check-availability" id="check_availability" label="Check Availability" click="onUsernameCheck()"/>
		<mx:HBox visible="{Configuration.SHOW_CHECKCROSS_IMAGES}" includeInLayout="{Configuration.SHOW_CHECKCROSS_IMAGES}">
			<mx:Image id="check" visible="false" includeInLayout="false" height="30" width="30"/>
			<mx:Image id="cross" visible="false" includeInLayout="false" height="30" width="30"/>	
		</mx:HBox>
		<mx:Text id="correct" styleName="error" width="100%" visible="false" includeInLayout="false" text="{Configuration.USERNAME_AVAILABLE_TEXT}"/>
		<mx:Text id="invalid" styleName="error" width="100%" visible="false" includeInLayout="false" text="{Configuration.USERNAME_INVALID_TEXT}"/>
		<mx:Text id="incorrect" styleName="error" width="100%" visible="false" includeInLayout="false" text="{Configuration.USERNAME_UNAVAILABLE_TEXT}"/>
		<mx:Text id="own_name" styleName="error" width="100%" visible="false" includeInLayout="false" text="{Configuration.YOUR_USERNAME_TEXT}"/>
		<mx:Text id="checking" styleName="error" text="{Configuration.USERNAME_CHECKING_TEXT}" width="100%" visible="false" includeInLayout="false"/>
	</mx:HBox>
</mx:Module>
